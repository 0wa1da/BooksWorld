{"version":3,"sources":["component/searcharea/SearchArea.js","component/carditem/CardItem.js","component/collectionlist/CollectionList.js","pages/discoverypage/DiscoveryPage.js","component/header/Header.js","App.js","serviceWorker.js","index.js"],"names":["SearchArea","handlSearch","searchBooks","handlSort","className","onSubmit","type","onChange","defaultValue","disabled","style","display","value","CardItem","props","alt","src","height","fontSize","fontFamily","title","auth","published","substring","CollectionList","books","map","book","i","key","volumeInfo","imageLinks","thumbnail","authors","publishedDate","DiscoveryPage","e","preventDefault","fetch","state","searchField","then","response","json","data","cleanCode","setState","catch","console","log","target","sort","items","hasOwnProperty","sortedBooks","this","a","b","parseInt","Component","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.87ddc908.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./SearchArea.css\"\r\n\r\nexport default function SearchArea({handlSearch,searchBooks,handlSort}) {\r\n    return (\r\n        <div className=\"searcharea-container\">\r\n            <form onSubmit={searchBooks}>\r\n                <input type=\"search\" className=\"searcharea-input\" onChange={handlSearch} />\r\n                <button className='searcharea-button'>Search</button>\r\n                <select className='searcharea-option' defaultValue=\"Sort\"  onChange={handlSort}>\r\n                  <option className=\"searcharea-option-items\" disabled style={{\r\n                    display:\"none\"\r\n                  }} value=\"Sort\" >Sort</option>\r\n                  <option className=\"searcharea-option-items\" value=\"Newest\" >Newest</option>\r\n                  <option className=\"searcharea-option-items\" value=\"Oldest\" >Oldest</option>\r\n                </select>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./CardItem.css\"\r\n\r\nexport default function CardItem(props) {\r\n    return (\r\n      <div className=\"carditem-container\">\r\n        <div style={{\r\n          display:\"block\"\r\n        }}>\r\n          <img alt=\"book thumble\" src={props.src} height=\"150px\"/>\r\n        </div>\r\n      <div className=\"carditem-info-container\">\r\n          <p style={{\r\n              fontSize:\"15px\",\r\n              fontFamily:\"cursive\",\r\n          }}>{props.title}</p>\r\n          <p style={{\r\n            fontSize:\"10px\",\r\n            fontFamily:\"cursive\",\r\n          }}>Author/s : {props.auth}</p>\r\n          <p style={{\r\n            fontSize:\"12px\",\r\n            fontFamily:\"cursive\",\r\n          }}>Published Date : {props.published === '0000' ? 'UnAvailable' : props.published.substring(0,4)}</p> \r\n      </div>  \r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./CollectionList.css\"\r\nimport CardItem from '../carditem/CardItem'\r\nexport default function CollectionList(props) {\r\n\r\n  return (\r\n    <div className=\"collectionlist-container\">\r\n      {\r\n        props.books.map((book,i) => \r\n          <CardItem\r\n                key = {i} \r\n                src = {book.volumeInfo.imageLinks.thumbnail} \r\n                title = {book.volumeInfo.title} \r\n                auth = {book.volumeInfo.authors} \r\n                published = {book.volumeInfo.publishedDate}\r\n              />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport \"./DiscoveryPage.css\";\r\nimport SearchArea from \"../../component/searcharea/SearchArea\";\r\nimport CollectionList from \"../../component/collectionlist/CollectionList\";\r\n\r\nexport default class DiscoveryPage extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      searchField: '',\r\n      books: [],\r\n      sort: ''\r\n    }\r\n  }\r\n  searchBooks = (e) => {\r\n    e.preventDefault();\r\n    fetch(`https://www.googleapis.com/books/v1/volumes?q=${this.state.searchField}`)\r\n    .then(response => response.json())\r\n    .then(data =>{\r\n      // const cleanCode = this.cleanCode(data)\r\n      const cleanCode = this.cleanCode(data)\r\n      this.setState({books : cleanCode})\r\n      } \r\n    )\r\n    .catch(()=>console.log('Error in searchBooks fcn'))\r\n    // .then(console.log(this.state.books))    \r\n  }\r\n\r\n  handlSearch = (e) => {\r\n    this.setState({searchField:e.target.value})\r\n  }\r\n  \r\n  handlSort = (e) =>{\r\n    this.setState({sort:e.target.value})\r\n  }\r\n\r\n  cleanCode = (data) =>{  \r\n    const cleanedData = data.items.map((book) => {\r\n      if(book.volumeInfo.hasOwnProperty('publishedDate') === false)\r\n        book.volumeInfo['publishedDate'] = '0000'\r\n      \r\n      if(book.volumeInfo.hasOwnProperty('imageLinks') === false)\r\n        book.volumeInfo['imageLinks'] = {thumbnail: 'https://www.westernheights.k12.ok.us/wp-content/uploads/2020/01/No-Photo-Available.jpg'}\r\n      if(book.volumeInfo.hasOwnProperty('authors') === false)\r\n        book.volumeInfo['authors'] = 'UnAvailable'\r\n      \r\n      return book;\r\n      })\r\n    return cleanedData;\r\n  }\r\n\r\n  render(){\r\n    const sortedBooks = this.state.books.sort(\r\n      (a,b) => {\r\n        if(this.state.sort === 'Newest')\r\n          return parseInt(b.volumeInfo.publishedDate.substring(0,4)) - parseInt(a.volumeInfo.publishedDate.substring(0,4))\r\n        if(this.state.sort === 'Oldest')\r\n          return parseInt(a.volumeInfo.publishedDate.substring(0,4)) - parseInt(b.volumeInfo.publishedDate.substring(0,4))\r\n        return parseInt(a.volumeInfo.publishedDate.substring(0,4)) + parseInt(b.volumeInfo.publishedDate.substring(0,4))\r\n      }\r\n    )\r\n    return (\r\n      <div>          \r\n        <SearchArea\r\n          handlSearch={this.handlSearch}\r\n          searchBooks={this.searchBooks} \r\n          handlSort={this.handlSort}\r\n          />\r\n          <CollectionList books={sortedBooks} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n//useless code\r\n\r\n// export function DiscoveryPagee() {\r\n//   const [state, setState] =  useState({searchField: '', books: []})\r\n  \r\n//   const card = () =>{\r\n//     state.books.map((book,i) => \r\n//       <CardItem\r\n//             key = {i} \r\n//             src = {book.volumeInfo.imageLinks.thumbnail} \r\n//             title = {book.volumeInfo.title} \r\n//             auth = {book.volumeInfo.authors} \r\n//             published = {book.volumeInfo.publishedDate}\r\n//           />)\r\n//   }\r\n\r\n//   const searchBooks = (e) => {\r\n//     e.preventDefault();\r\n//     fetch(`https://www.googleapis.com/books/v1/volumes?q=${state.searchField}`)\r\n//     .then(response => response.json())\r\n//     .then(data => setState({books : [...data.items]}))\r\n//     .then(console.log(state.books))    \r\n//     .catch(()=>console.log('error=> searchfield is empty'))\r\n\r\n//     document.getElementById('collectionlist-cards').innerHTML=`${\r\n//      card()\r\n//     }`\r\n\r\n//   }                              \r\n// // should add hasProperty  \r\n//   const handlSearch = (e) => {\r\n//      setState({searchField:e.target.value})\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <SearchArea\r\n//           handlSearch={handlSearch}\r\n//           searchBooks={searchBooks} \r\n//           />\r\n//           <CollectionList books={state.books} test={state.test}/>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n","import React from 'react'\r\nimport \"./Header.css\"\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div className=\"header-container\">\r\n            <div style={{\r\n              fontFamily: 'Satisfy, cursive',\r\n              fontSize : '30px'\r\n              \r\n            }}>Books World</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport DiscoveryPage from './pages/discoverypage/DiscoveryPage';\nimport Header from \"./component/header/Header\";\n// booklist with search ability, show details when click on\n// favorite list and recents  : get access when sign in \n// sign in and sign up page  - can sign up -\n// readers' forum page, posts, replays and likes \n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <DiscoveryPage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}